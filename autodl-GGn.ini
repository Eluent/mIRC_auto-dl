;CAREFUL !the semicolon character ":" isn't accepted in this first selecting string (can't have on *text:*https://gazellegames.net*:#announce , for isntance)
; ADAPT if you want to use another tracker
on *:text:*https*:#announce: {
  ;When https appears in the above named channel, look for candidate torrent

  ;CHECKING WE'RE  ON THE CORRECT SERVER. ADAPT
  if ($server != irc.gazellegames.net) goto done

  ;CLEAN THE TEXT
  ;it may have annoying formatting, like colours, as is the case on GGn
  var %AnnounceCleaned = $1-
  %AnnounceCleaned = $strip(%AnnounceCleaned)

  ;THE MEAT : THE REGEX
  ;THIS ANALYSES THE TEXT TO CHECK IT AS A VALID TORRENT ANNOUNCE
  ;msl (mIrc Scripting Language) uses pcre regex
  ;to build and test your own regex (ADAPT) : https://regex101.com/
  $regex(AnnounceData,%AnnounceCleaned,/(.+?) - Uploaded: \|\| (.*?)? - (.+)? in (.+) \[-(\d+)-\] - \((.+), (.*)\) - https:\/\/gazellegames.net\/torrents.php\?id=(\d+) -OR- https:\/\/gazellegames.net\/torrents.php\?action=download&id=(\d+) - (.*)/g)
  var %nbProperties = $regml(AnnounceData,0)
  if (%nbProperties < 10) {
    echo $color(info) -aet * Message isn't recognized as a valid game annouce.
    goto error
  }
  ;THE REGEX GAVE US a structured AnnounceData, which we can use the properties of like this
  ;$regml(%AnnounceData,x) ;where x is the number of the property, this returns the string of the property, they are as follows :
  ;    property                       number
  var %Uploader = $regml(AnnounceData,1)
  var %Platforms = $regml(AnnounceData,2)
  var %ReleaseName = $regml(AnnounceData,3)
  var %GameTitle = $regml(AnnounceData,4)
  var %ReleaseYear = $regml(AnnounceData,5)
  var %Languages = $regml(AnnounceData,6)
  var %ReleaserType = $regml(AnnounceData,7)
  var %TorrentID = $regml(AnnounceData,8)
  var %DownloadID = $regml(AnnounceData,9)
  var %Tags = $regml(AnnounceData,10)
  ;this will indicate if we download the torrent or not. By default, we do. ADAPT if you don't want to download everything : set to 0 and write at least one filter that may set it to 1 !
  var %snatch = 1 ;

  ;WRITE FILTERS
  ;ADAPT
  ;it's a bit nicer to start with the cancelling clauses (if any) :
  ;example of a cancelling clause
  ;if(%ReleaserType != Scene) {
  ;  %snatch = 0
  ;  goto done
  ;}

  ;ADAPT
  ;So if you wanted to filter by game title
  ;if(%GameTitle == Silver Bullet: Prometheus) %snatch = 1
  ;You can combine comparisons by using the && for AND and || for OR characters
  ; here we select releases of Silver Bullet that include PS Vita or GameBoy
  ;if(%GameTitle == Silver Bullet: Prometheus && (PlayStation Vita isin %Platforms || Game Boy isin %Platforms) ) %snatch = 1

  if(%snatch == 0) goto done

  ;BUILD THE URL OF THE TORRENT FILE
  ;ADAPT according to different tracker/change in tracker adress etc.
  ;how a message delivered by Vertigo on #announce for GGn looks like :
  ;MrClean - Uploaded: || Windows - Silver.Bullet.Prometheus-CODEX in Silver Bullet: Prometheus [-2016-] - (English, Scene) - https://gazellegames.net/torrents.php?id=12345 -OR- https://gazellegames.net/torrents.php?action=download&id=67890 - adventure, action, role_playing_game, shooter, indie, |, controller, controller_support, female_protagonist, native_controller_support
  ;url for the torrent file:
  ;https://gazellegames.net/torrents.php?action=download&id=67890&authkey=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&torrent_pass=yyyyyyyyyyyyyyyyyyyyyyyyyy
  ;ADAPT - To find your authkey and torrent_pass go to a torrent webpage and copy its link address, don't panic about letting them in this present file, those aren't your passwords to the tracker or even the irc channel.
  ;Still, just be careful if you want to share a modified version of this file for instance, don't pass them around, of course. (other users who have access to the website or the announce channell could download stuff in your name and deplete your buffer)
  var %authKey = CRITICAL ADAPT your own authkey here not between quotes or anything
  var %trtPass = CRITICAL ADAPT your own torrent_pass here not between quotes or anything
  var %url = https://gazellegames.net/torrents.php?action=download $+ $chr(038) $+ id= $+ %DownloadID $+ $chr(038) $+ authkey= $+ %authKey $+ $chr(038) $+ torrent_pass= $+ %trtPass

  ;DOWNLOAD THE TORRENT FILE

  ;ADAPT name of the log file updated after each download by wget. You might want to rename this as GGnLastSnatched.txt if you use several such scripts, so that they don't write concurrently to the same logfile
  ;GNU wget is expected, as of coding this https://eternallybored.org/misc/wget/ 1.18 version was used. Either use its installation folder or add it to environment variables. ADAPT
  ;the logfile will be written in the mIrc directory
  var %logFile = lastSnatched.txt
  ;CLEANING THE URL TO BE PASSABLE IN A mIrc SCRIPT
  var %quotedUrl = " $+ %url $+ "
  NOOP $regsub(%quotedUrl,&,\&,%quotedUrl)

  ;DOWNLOAD THE TRT FILE
  ;PUT YOUR WATCH FOLDER HERE! CRITICAL ADAPT
  var %targetFolder = "C:\Trt\watch"
  ;Opens an OLE link to the Windows Shell COM component
  .comopen WSH WScript.Shell
  ;ADAPT
  ;if like me you've added wget to the environment wariables, wget is enough
  var %pathToWget = wget
  ;otherwise something like
  ;var %pathToWget = "D:\Apps\Freeware\Internet\wget-1.18-win32\wget.exe"
  ;those parameters shoud ensure that the resulting torrent file is named as the website does
  var %strCommand =  %pathToWget $+ $chr(032) $+ %quotedUrl $+ $chr(032) $+ --content-disposition --trust-server-names -o $+ $chr(032) $+ %logFile $+ $chr(032) $+ -P $+ $chr(032) $+ %targetFolder
  ;the donwloading itself
  $com(WSH, Run, 1, bstr,cmd.exe /c %strCommand, i1, 0, bool, True)

  ;CHECKING THAT THE FILE WAS DOWNLOADED FROM THE LOGFILE
  ;the version of wget put the url of the last saved file on the 1st line, you might want to check that and ADAPT if not using the same version
  var %firstLogLine = $read(%logFile,1)
  if (%url isin %firstLogLine) echo -aet First log line found to validate url down attempt
  else { 
    echo -aet ERROR : Not the good url on line 1 of the log file ( %logFile ).
    echo -aet This Could mean you have concurrent files being downloaded from several such scripts for several trackers writing on the same log file.
    echo -aet The script warns you against that. Go and read it if that seems like a possible reason.
    goto error
  }
  if (0K isin $read(%logFile,8)) echo -aet wget says OK: file downloaded !
  else {
    echo -aet ERROR : wget wasn't able to retrieve the file
    goto error
  }
  :error
  :done
  .comclose WSH
}
